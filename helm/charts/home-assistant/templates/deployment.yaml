apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "home-assistant.fullname" . }}
  labels:
    {{- include "home-assistant.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "home-assistant.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "home-assistant.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "home-assistant.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: config
        emptyDir: {}
      {{- if .Values.secrets }}
      - name: secrets
        secret:
          secretName: secrets
          items:
          {{- range $key, $val := .Values.secrets }}
          - key: {{ $key }}
            path: {{ $key }}
          {{- end }}
      {{- end }}
      initContainers:
      - name: {{ .Chart.Name }}-init
        image: "{{ .Values.image.repository }}:{{- if .Values.image.tag }}{{- .Values.image.tag }}{{- else }}{{- .Values.appVersion }}{{- end }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /render-config.sh
        volumeMounts:
        - name: config
          mountPath: /config
        {{- if .Values.secrets }}
        - name: secrets
          mountPath: /.secrets
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{- if .Values.image.tag }}{{- .Values.image.tag }}{{- else }}{{- .Values.appVersion }}{{- end }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - name: config
            mountPath: /config
          {{- if .Values.secrets }}
          - name: secrets
            mountPath: /.secrets
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
